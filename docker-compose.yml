version: '3.8'

services:
  web:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    image: jeconn/web:latest
    container_name: jeconn-web-container
    ports:
      - "3000:3000"
    restart: always
    volumes:
      - ./frontend:/web/src/app
    depends_on:
      - backend
    networks:
      - webapp-network

  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    image: jeconn/backend:latest
    container_name: jeconn-backend-container
    ports:
      - "9000:9000"
    restart: always
    volumes:
      - ./backend:/backend/src/app
      - ./users:/app/users
    depends_on:
      - mongodb
    networks:
      - webapp-network

  mongodb:
    image: mongo:4
    container_name: jeconn-mongo-container
    ports:
      - "27017:27017"
    environment:
      MONGO_INITDB_ROOT_USERNAME: ${MONGO_INITDB_ROOT_USERNAME}
      MONGO_INITDB_ROOT_PASSWORD: ${MONGO_INITDB_ROOT_PASSWORD}
      MONGO_INITDB_DATABASE: ${MONGO_INITDB_DATABASE}
      TZ: Asia/Jakarta
    restart: always
    volumes:
      - mongo-data:/data/db
    networks:
      - webapp-network

  mongo-express:
    image: mongo-express:latest
    container_name: jeconn-me-container
    ports:
      - "8081:8081"
    environment:
      ME_CONFIG_MONGODB_SERVER: mongodb
      ME_CONFIG_MONGODB_PORT: 27017
      ME_CONFIG_MONGODB_ENABLE_ADMIN: "true"
      ME_CONFIG_MONGODB_ADMINUSERNAME: ${MONGO_INITDB_ROOT_USERNAME}
      ME_CONFIG_MONGODB_ADMINPASSWORD: ${MONGO_INITDB_ROOT_PASSWORD}
      ME_CONFIG_BASICAUTH_USERNAME: ${ME_CONFIG_BASICAUTH_USERNAME}
      ME_CONFIG_BASICAUTH_PASSWORD: ${ME_CONFIG_BASICAUTH_PASSWORD}
    restart: always
    depends_on:
      - mongodb
    networks:
      - webapp-network

volumes:
  mongo-data:
    driver: local

networks:
  webapp-network:
    driver: bridge
